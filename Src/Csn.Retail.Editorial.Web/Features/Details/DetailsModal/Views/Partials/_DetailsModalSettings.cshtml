@using Csn.Retail.Editorial.Web.Features.Shared.HtmlHelpers

@{
    var detailsModalSettings = Html.DetailsModalSettings();
}

<script>
    var csn_editorial = csn_editorial || {};
    var disableNonArticleLinks = function(scope) {
        [...scope.getElementsByTagName('a')].forEach((element) => {
            let articleUrl = element.getAttribute('href');
            if(articleUrl) {
                if(csn_editorial.detailsModal && csn_editorial.detailsModal.pathRegex.test(articleUrl)) {
                    element.style.cursor = 'pointer';
                    element.onclick = () => window.open(csn_editorial.detailsModal.pathRedirect + articleUrl.split('-').pop(), '_self');
                }
                else {
                    element.style.pointerEvents = 'none';
                }
                element.removeAttribute('href');
            }
        });
    }
    if (csn_editorial.alsoConsider != null) {
        csn_editorial.alsoConsider.hooks = () => disableNonArticleLinks(document.querySelector('.also-consider-placeholder'));
    }
    var networkIdPrefix = "@detailsModalSettings.NetworkIdFormat".split('{')[0];
    csn_editorial.detailsModal = {
        pathRegex: "@detailsModalSettings.DetailsUrlFormat" === "V1" ? new RegExp("^@detailsModalSettings.BasePath@detailsModalSettings.DetailsRouteSegment/.*-\\d+/?$") : new RegExp(`^@detailsModalSettings.BasePath@detailsModalSettings.DetailsRouteSegment/.*/${networkIdPrefix}\\d+/?$`),
        pathRedirect: `@(detailsModalSettings.BasePath)details-modal/${networkIdPrefix}`,
        disableNonArticleLinks: disableNonArticleLinks
    }
</script>