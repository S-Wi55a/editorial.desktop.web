@using System.ComponentModel
@using Csn.Retail.Editorial.Web.Features.Landing.Configurations
@using Csn.Retail.Editorial.Web.Features.Landing.Models
@using Csn.Retail.Editorial.Web.Features.MediaMotiveAds
@using Csn.Retail.Editorial.Web.Features.MediaMotiveAds.HtmlHelpers
@using Csn.Retail.Editorial.Web.Features.Shared.HtmlHelpers
@using Csn.Retail.Editorial.Web.Features.Shared.Models
@using Csn.Retail.Editorial.Web.Infrastructure.AssetMappers
@using Newtonsoft.Json
@using React.Web.Mvc
@model LandingViewModel

@section Head{
    @{ Html.RenderPartial("Partials/Head/_BasicSeoData", Model.SeoData); }
}

@{
    var tenantName = Html.CurrentTenant().Name.ToLower();
    var showHero = Model.CampaignAd != null || !string.IsNullOrEmpty(Model.HeroImage);
}

@section Styles {
    @Html.AssetCss("landing-page--" + tenantName)
}

@section TopScripts {
    @Html.AssetJs("landing.vendor", LoadType.Defer)
    @Html.AssetJs("landing-page--" + tenantName, LoadType.Defer)
    @Html.AssetJs("csn.mediaMotive--" + tenantName, LoadType.Defer)
}

<div class="landing-page @(showHero ? "landing-page--hasHeroImage" : "")">
    @{ Html.RenderPartial("~/Features/Shared/Hero/Views/_HeroSection.cshtml", Model); }

    <div class="main container-fluid">
        @for (var i = 0; i < Model.Carousels.Count; i++)
        {
            switch (Model.Carousels[i].CarouselType)
            {
                case CarouselTypes.Featured:
                case CarouselTypes.Article:
                    Html.RenderPartial("~/Features/Landing/Views/Partials/_Carousel.cshtml", Model, new ViewDataDictionary(ViewData) { { "index", i } });
                    break;
                case CarouselTypes.Driver:
                    Html.RenderPartial("~/Features/Landing/Views/Partials/_Carousel--Driver.cshtml", Model, new ViewDataDictionary(ViewData) { { "index", i } });
                    break;
            }
        }
    </div>
</div>

@{ Html.RenderPartial("~/Features/MediaMotiveAds/Views/_Tracking.cshtml", Model.MediaMotiveModel); }

@section BottomScripts
{
    @Html.React("global.Components.INavPreloadedState", new { state = Model.Nav }, containerId: "INavPreloadedState")
    @Html.React("global.Components.CarouselPreloadedState", new { state = Model.Carousels }, containerId: "CarouselPreloadedState")

    @if (Model.PolarNativeAdsData != null)
    {
        Html.RenderPartial("Partials/PolarNativeAds/_PolarNativeAds", Model.PolarNativeAdsData);
    }
    @if (Model.InsightsData.Any())
    {
        Html.RenderPartial("Partials/Tracking/_CsnInsights", Model.InsightsData);
    }
    @{Html.RenderPartial("Partials/MediaMotive/_Krux");}

    @{
        Html.RenderAction("HtmlTracking", "Tracking");
    }
}