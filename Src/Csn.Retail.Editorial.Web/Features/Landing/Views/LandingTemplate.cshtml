@using System.ComponentModel
@using Csn.Retail.Editorial.Web.Features.Landing.Configurations
@using Csn.Retail.Editorial.Web.Features.Landing.Models
@using Csn.Retail.Editorial.Web.Features.MediaMotiveAds
@using Csn.Retail.Editorial.Web.Features.MediaMotiveAds.HtmlHelpers
@using Csn.Retail.Editorial.Web.Features.Shared.HtmlHelpers
@using Csn.Retail.Editorial.Web.Infrastructure.AssetMappers
@using Newtonsoft.Json
@using React.Web.Mvc
@model LandingViewModel

@section Head{
}

@{
    var tenantName = Html.CurrentTenant().Name.ToLower();
}

@section Styles {
    @Html.AssetCss("landing-page--" + tenantName)
}

@section TopScripts {
    @Html.AssetJs("landing.vendor", LoadType.Defer)
    @Html.AssetJs("landing-page--" + tenantName, LoadType.Defer)
    @Html.AssetJs("csn.mediaMotive--" + tenantName, LoadType.Defer)
}

<div class="landing-page @(Model.CampaignAd != null ? "landing-page--hasHeroAdUnit" : "")">
    <h1 style="display: none;">@Model.Title</h1>

    @if (Model.CampaignAd != null)
    {
        Html.RenderPartial("~/Features/Landing/Views/Partials/_HeaderTransparent.cshtml");
        Html.RenderPartial("~/Features/Shared/HeroAdUnit/Views/_HeroAdUnit.cshtml", Model.CampaignAd);
        Html.RenderMediaMotiveAd(new MediaMotiveAdQuery() { AdSize = AdSize.Block1200X100, TileId = 1 });

    }
    else
    {
        Html.RenderPartial("Partials/_Header");
    }

    @Html.React("global.Components.INav", new { state = Model.Nav }, containerId: "iNav", containerClass: Model.CampaignAd != null ? "iNav--v2" : "iNav--v1")

    <div class="main container-fluid">
        @for (var i = 0; i < Model.Carousels.Count; i++)
        {
            switch (Model.Carousels[i].CarouselType)
            {
                case CarouselTypes.Article:
                    Html.RenderPartial("~/Features/Landing/Views/Partials/_Carousel.cshtml", Model, new ViewDataDictionary(ViewData) { { "index", i } });
                    break;
                case CarouselTypes.Driver:
                    Html.RenderPartial("~/Features/Landing/Views/Partials/_Carousel--Driver.cshtml", Model, new ViewDataDictionary(ViewData) { { "index", i } });
                    break;
            }
        }
    </div>
</div>

@section BottomScripts
{
    @Html.React("global.Components.INavPreloadedState", new {state = Model.Nav}, containerId: "INavPreloadedState")
    @Html.React("global.Components.CarouselPreloadedState", new { state = Model.Carousels }, containerId: "CarouselPreloadedState")

    @if (Model.PolarNativeAdsData != null)
    {
        Html.RenderPartial("Partials/PolarNativeAds/_PolarNativeAds", Model.PolarNativeAdsData);
    }
    @{Html.RenderPartial("Partials/MediaMotive/_Krux");}

}